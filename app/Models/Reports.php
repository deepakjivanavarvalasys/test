<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use DB;
use Illuminate\Support\Facades\Auth;

class Reports extends Model 
{
    use HasFactory;

    public function totalrecordsAgentdata()
    {
         //Below fetch ONLY LOGIN ra user leads data
        return DB::select("select agent_leads.*,agent_leads.id as userid,campaigns.id,campaigns.name,campaigns.allocation,users.first_name as userfname,users.last_name as userlname from agent_leads 
        inner join campaigns on agent_leads.campaign_id=campaigns.id 
        inner join users on agent_leads.agent_id=users.id where agent_id=? ORDER BY agent_leads.id ASC",[Auth::user()->id]);
        
        //Below fetch ALL ra user leads data
        // return DB::select("select agent_leads.*,agent_leads.id as userid,campaigns.id,campaigns.name,users.first_name as userfname,users.last_name as userlname from agent_leads inner join campaigns on agent_leads.campaign_id=campaigns.id inner join users on agent_leads.agent_id=users.id ORDER BY agent_leads.id ASC");

        
        // return DB::select("select * from agent_leads where agent_id=? ORDER BY id ASC",[Auth::user()->id]);

    }

    
    public function showAgentdata($firstpage,$perpage)
    {
        // echo $firstpage;
        // echo "<br>".$perpage;
         //Below fetch ONLY LOGIN ra user leads data
        return DB::select("select agent_leads.*,agent_leads.id as userid,campaigns.id,campaigns.name,campaigns.allocation,users.first_name as userfname,users.last_name as userlname from agent_leads 
        inner join campaigns on agent_leads.campaign_id=campaigns.id 
        inner join users on agent_leads.agent_id=users.id where agent_id=? ORDER BY agent_leads.id ASC limit ?,?",[Auth::user()->id,$firstpage,$perpage]);
        
        //Below fetch ALL ra user leads data
        // return DB::select("select agent_leads.*,agent_leads.id as userid,campaigns.id,campaigns.name,users.first_name as userfname,users.last_name as userlname from agent_leads inner join campaigns on agent_leads.campaign_id=campaigns.id inner join users on agent_leads.agent_id=users.id ORDER BY agent_leads.id ASC");

        
        // return DB::select("select * from agent_leads where ag    ent_id=? ORDER BY id ASC",[Auth::user()->id]);

    }

    public function agentLeadscounocc($startdate,$enddate)
    {

        // echo "model".$startdate.$enddate;
        //count occurances of agentids to find no. of leads generated by agents
        //return DB::select("select agent_id,count(*) as total from agent_leads group by agent_id Order BY total DESC");

        //Count with joins agent_leads and users Table
    // $topperformra=DB::select("select agent_leads.agent_id,users.first_name,users.last_name,count(*) as total 
    //  from agent_leads inner join users on agent_leads.agent_id=users.id where agent_leads.status=1 
    // and agent_leads.updated_At between ? and ? group by agent_leads.agent_id,users.first_name,users.last_name Order BY total DESC LIMIT 10",[$startdate,$enddate]);
if($startdate==0 || $enddate==0)
{
    $topperformra=  DB::select("select agent_leads.agent_id,users.first_name,users.last_name, count(case when agent_leads.status='1' then 1 end) as completed ,
    count(case when agent_leads.status='0' then 1 end) as rejected,count(agent_leads.agent_id) as total 
    from agent_leads inner join users on agent_leads.agent_id=users.id 
    group by agent_leads.agent_id order by completed desc LIMIT 10;");

}
else{
    $topperformra=  DB::select("select agent_leads.agent_id,users.first_name,users.last_name, count(case when agent_leads.status='1' then 1 end) as completed ,
    count(case when agent_leads.status='0' then 1 end) as rejected,count(agent_leads.agent_id) as total 
    from agent_leads inner join users on agent_leads.agent_id=users.id 
    where agent_leads.updated_At between ? and ? group by agent_leads.agent_id order by completed desc LIMIT 10;",[$startdate,$enddate]);

}


    //  $topperformra=DB::select("select agent_leads.agent_id,agent_leads.status,users.first_name,users.last_name,count(*) as totalstatus  from agent_leads inner join users on agent_leads.agent_id=users.id and agent_leads.status=users.status  where agent_leads.updated_At between ? and ? group by agent_id,first_name,last_name,status  LIMIT 10",[$startdate,$enddate]);
        return $topperformra;
    }


    public function showTeamleader($startdate,$enddate)
    {
        // echo $startdate;

        if($startdate==0 || $enddate==0)
{
    $result=  DB::select("select agent_leads.agent_id,users.first_name,users.last_name, 
     count(case when agent_leads.status='1' then 1 end) as completed,
     count(case when agent_leads.status='0' then 1 end) as rejected,count(agent_leads.agent_id) as total,
     (count(case when agent_leads.status='1' then 1 end)/count(agent_leads.agent_id)*100) as totrejected,
     (count(case when agent_leads.status='0' then 1 end)/count(agent_leads.agent_id)*100) as totquality from agent_leads 
     inner join users on agent_leads.agent_id=users.id where reporting_user_id=? 
     group by agent_leads.agent_id;",[Auth::user()->id]);
}else
{
     $result=  DB::select("select agent_leads.agent_id,users.first_name,users.last_name, 
     count(case when agent_leads.status='1' then 1 end) as completed ,
     count(case when agent_leads.status='0' then 1 end) as rejected,count(agent_leads.agent_id) as total,
     (count(case when agent_leads.status='1' then 1 end)/count(agent_leads.agent_id)*100) as totrejected,
     (count(case when agent_leads.status='0' then 1 end)/count(agent_leads.agent_id)*100) as totquality from agent_leads 
     inner join users on agent_leads.agent_id=users.id where reporting_user_id=? 
     and agent_leads.updated_At between ? and ? group by agent_leads.agent_id;",[Auth::user()->id,$startdate,$enddate]);
}    
        // $result = DB::select("select agent_leads.status,agent_leads.agent_id,users.first_name,users.last_name,count(agent_leads.agent_id) as total,count(agent_leads.status) as statustotal from agent_leads inner join users on agent_leads.agent_id=users.id 
        // where reporting_user_id=? 
        // group by agent_leads.agent_id
        // LIMIT 10",[Auth::user()->id]);
// return dd($result);
        // $result = DB::select("select * from users where reporting_user_id=?",[Auth::user()->id]);
     return $result;   
    }


    public function teamleadernamelist()
    {
        // role_id=3 for team leader

        $teamleader=DB::select('select * from users where role_id=?',[3]);
        return $teamleader;
    }

    public function showmanagerreport($firstpage,$perpage,$selteamleaderid,$startdate,$enddate)
    {
        //  echo "model".$selteamleaderid;
         if($selteamleaderid==0 && ($startdate==0 && $enddate==0))
        {       
        $result=  DB::select("select agent_leads.agent_id,users.first_name,users.last_name, campaigns.deliver_count, campaigns.name, 
     count(case when agent_leads.status='1' then 1 end) as completed ,
     count(case when agent_leads.status='0' then 1 end) as rejected,count(agent_leads.agent_id) as total,
     (count(case when agent_leads.status='1' then 1 end)/count(agent_leads.agent_id)*100) as totrejected,
     (count(case when agent_leads.status='0' then 1 end)/count(agent_leads.agent_id)*100) as totquality from agent_leads 
     inner join users on agent_leads.agent_id=users.id 
     inner join campaigns on agent_leads.campaign_id=campaigns.id 
     group by agent_leads.agent_id,campaigns.name limit ?,?;",[$firstpage,$perpage]);
        }elseif($selteamleaderid!=0 && ($startdate==0 && $enddate==0))
        {
            $result=  DB::select("select agent_leads.agent_id,users.first_name,users.last_name, campaigns.deliver_count,campaigns.name, 
            count(case when agent_leads.status='1' then 1 end) as completed ,
            count(case when agent_leads.status='0' then 1 end) as rejected,count(agent_leads.agent_id) as total,
            (count(case when agent_leads.status='1' then 1 end)/count(agent_leads.agent_id)*100) as totrejected,
            (count(case when agent_leads.status='0' then 1 end)/count(agent_leads.agent_id)*100) as totquality from agent_leads 
            inner join users on agent_leads.agent_id=users.id 
            inner join campaigns on agent_leads.campaign_id=campaigns.id 
            where reporting_user_id=?  group by agent_leads.agent_id,campaigns.name limit ?,?;",[$selteamleaderid,$firstpage,$perpage]);
        }
      else
     {
        $result=  DB::select("select agent_leads.agent_id,users.first_name,users.last_name,campaigns.deliver_count, campaigns.name, 
     count(case when agent_leads.status='1' then 1 end) as completed ,
     count(case when agent_leads.status='0' then 1 end) as rejected,count(agent_leads.agent_id) as total,
     (count(case when agent_leads.status='1' then 1 end)/count(agent_leads.agent_id)*100) as totrejected,
     (count(case when agent_leads.status='0' then 1 end)/count(agent_leads.agent_id)*100) as totquality from agent_leads 
     inner join users on agent_leads.agent_id=users.id 
     inner join campaigns on agent_leads.campaign_id=campaigns.id 
     where reporting_user_id=? and
     agent_leads.updated_At between ? and ? group by agent_leads.agent_id,campaigns.name limit ?,?;",[$selteamleaderid,$startdate,$enddate,$firstpage,$perpage]);
     
     }
     return $result;

    }

    public function totalcountshowmanagerreport($selteamleaderid,$startdate,$enddate)
    {
        //  echo "model".$selteamleaderid;
         if($selteamleaderid==0 && ($startdate==0 && $enddate==0))
        {       
        $result=  DB::select("select agent_leads.agent_id,users.first_name,users.last_name, campaigns.deliver_count, campaigns.name, 
     count(case when agent_leads.status='1' then 1 end) as completed ,
     count(case when agent_leads.status='0' then 1 end) as rejected,count(agent_leads.agent_id) as total,
     (count(case when agent_leads.status='1' then 1 end)/count(agent_leads.agent_id)*100) as totrejected,
     (count(case when agent_leads.status='0' then 1 end)/count(agent_leads.agent_id)*100) as totquality from agent_leads 
     inner join users on agent_leads.agent_id=users.id 
     inner join campaigns on agent_leads.campaign_id=campaigns.id 
     group by agent_leads.agent_id,campaigns.name;");
        }elseif($selteamleaderid!=0 && ($startdate==0 && $enddate==0))
        {
            $result=  DB::select("select agent_leads.agent_id,users.first_name,users.last_name, campaigns.deliver_count,campaigns.name, 
            count(case when agent_leads.status='1' then 1 end) as completed ,
            count(case when agent_leads.status='0' then 1 end) as rejected,count(agent_leads.agent_id) as total,
            (count(case when agent_leads.status='1' then 1 end)/count(agent_leads.agent_id)*100) as totrejected,
            (count(case when agent_leads.status='0' then 1 end)/count(agent_leads.agent_id)*100) as totquality from agent_leads 
            inner join users on agent_leads.agent_id=users.id 
            inner join campaigns on agent_leads.campaign_id=campaigns.id 
            where reporting_user_id=?  group by agent_leads.agent_id,campaigns.name;",[$selteamleaderid]);
        }
      else
     {
        $result=  DB::select("select agent_leads.agent_id,users.first_name,users.last_name,campaigns.deliver_count, campaigns.name, 
     count(case when agent_leads.status='1' then 1 end) as completed ,
     count(case when agent_leads.status='0' then 1 end) as rejected,count(agent_leads.agent_id) as total,
     (count(case when agent_leads.status='1' then 1 end)/count(agent_leads.agent_id)*100) as totrejected,
     (count(case when agent_leads.status='0' then 1 end)/count(agent_leads.agent_id)*100) as totquality from agent_leads 
     inner join users on agent_leads.agent_id=users.id 
     inner join campaigns on agent_leads.campaign_id=campaigns.id 
     where reporting_user_id=? and
     agent_leads.updated_At between ? and ? group by agent_leads.agent_id,campaigns.name;",[$selteamleaderid,$startdate,$enddate]);
     
     }
     return $result;

    }

    public function testing()
    {
        $result=  DB::select("select * from agent_leads;");
     return $result;
    }

}
